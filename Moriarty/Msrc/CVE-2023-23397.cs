using Microsoft.Office.Interop.Outlook;
using System;
using System.Collections.Generic;

namespace Moriarty.Msrc
{
    public class CVE_2023_23397 : IVulnerabilityCheck
    {
        private const string Id = "CVE-2023-23397";
        private static readonly string[] Exploits = new[]
        {
            "https://github.com/api0cradle/CVE-2023-23397-POC-Powershell/tree/main"
        };

        public Vulnerability GetVulnerability()
        {
            return new Vulnerability(Id, Exploits);
        }

        public void Check(VulnerabilityCollection vulnerabilities, int buildNumber, List<int> installedKBs)
        {
            Application outlookApp = null;
            AppointmentItem newAppointment = null;

            try
            {
                DebugUtility.DebugPrint("Starting proactive scan for CVE-2023-23397...");
                outlookApp = new Application();
                NameSpace outlookNamespace = outlookApp.GetNamespace("MAPI");
                MAPIFolder calendarFolder = outlookNamespace.GetDefaultFolder(OlDefaultFolders.olFolderCalendar);

                newAppointment = (AppointmentItem)calendarFolder.Items.Add(OlItemType.olAppointmentItem);
                newAppointment.Subject = "Proactive Vulnerability Test";
                newAppointment.Start = System.DateTime.Now.AddHours(2);
                newAppointment.End = System.DateTime.Now.AddHours(3);
                newAppointment.ReminderSet = true;
                newAppointment.ReminderMinutesBeforeStart = 15;
                newAppointment.ReminderSoundFile = @"\\fakepath\sound.wav";
                newAppointment.Save();

                Console.WriteLine(newAppointment.ReminderSoundFile);
                if (newAppointment.ReminderSoundFile.Equals(@"\\fakepath\sound.wav"))
                {
                    DebugUtility.DebugPrint("Successfully validated the UNC path in the reminder sound file.");
                    vulnerabilities.SetAsVulnerable(Id);
                }
                else
                {
                    DebugUtility.DebugPrint("The UNC path in the reminder sound file was not set as expected.");
                }

                // Clean up the test appointment
                newAppointment.Delete();
                DebugUtility.DebugPrint("Successfully cleaned up the test appointment.");
            }
            catch (System.Runtime.InteropServices.COMException comEx)
            {
                DebugUtility.DebugPrint("Failed to create or delete the appointment - COM Exception: " + comEx.Message);
                DebugUtility.DebugPrint("Outlook may be properly secured against this type of vulnerability.");
            }
            catch (System.Exception ex)
            {
                DebugUtility.DebugPrint("Failed to create or delete the appointment - Exception: " + ex.Message);
                DebugUtility.DebugPrint("This could indicate that proactive security measures are in place.");
            }
            finally
            {
                if (newAppointment != null) System.Runtime.InteropServices.Marshal.ReleaseComObject(newAppointment);
                if (outlookApp != null) System.Runtime.InteropServices.Marshal.ReleaseComObject(outlookApp);
            }
        }
    }
}
