using Microsoft.Office.Interop.Outlook;
using System.Collections.Generic;


namespace Moriarty.Msrc
{
    public class CVE_2023_23397 : IVulnerabilityCheck
    {
        private const string Id = "CVE-2023-23397";
        private static readonly string[] Exploits = new[]
        {
            "https://github.com/example/CVE-2023-23397_scanner"
        };

        public Vulnerability GetVulnerability()
        {
            return new Vulnerability(Id, Exploits);
        }

        public void Check(VulnerabilityCollection vulnerabilities, int buildNumber, List<int> installedKBs)
        {
            DebugUtility.DebugPrint("Starting scan for CVE-2023-23397...");
            Microsoft.Office.Interop.Outlook.Application outlookApp = new Microsoft.Office.Interop.Outlook.Application();
            NameSpace outlookNamespace = outlookApp.GetNamespace("MAPI");
            MAPIFolder calendarFolder = outlookNamespace.GetDefaultFolder(OlDefaultFolders.olFolderCalendar);

            Items calendarItems = calendarFolder.Items;
            calendarItems.IncludeRecurrences = true;

            foreach (AppointmentItem item in calendarItems)
            {
                if (!string.IsNullOrEmpty(item.ReminderSoundFile) && item.ReminderSoundFile.StartsWith("\\\\"))
                {
                    DebugUtility.DebugPrint($"Detected potential NTLM leak in calendar item: '{item.Subject}' with remote path: {item.ReminderSoundFile}");
                    vulnerabilities.SetAsVulnerable(Id);
                }
            }

            DebugUtility.DebugPrint("Finished scanning for CVE-2023-23397.");
        }
    }
}
