using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;

namespace Moriarty.Msrc
{
    public class CVE_2022_40140 : IVulnerabilityCheck
    {
        private const string Id = "NotProxyShellHunter (CVE-2022-40140, CVE-2022-41082)";
        private const string Target = "mail.local";
        private static readonly string[] Exploits = new[]
{
            "https://github.com/mr-r3b00t/NotProxyShellHunter"
        };

        public Vulnerability GetVulnerability()
        {
            return new Vulnerability(Id, Exploits);
        }

        public void Check(VulnerabilityCollection vulnerabilities, int buildNumber, List<int> installedKBs)
        {
            DebugUtility.DebugPrint("Running CVE-2022-40140 & CVE-2022-41082 vulnerability checks...");

            if (DnsResolves(Target))
            {
                CheckAutoDiscover(vulnerabilities);
                CheckAutoDiscoverSSRF(vulnerabilities);
            }
            else
            {
                DebugUtility.DebugPrint("DNS does not resolve for " + Target);
            }
        }

        private static bool DnsResolves(string target)
        {
            try
            {
                var hostEntry = Dns.GetHostEntry(target);
                return hostEntry.AddressList.Length > 0;
            }
            catch
            {
                return false;
            }
        }

        private static void CheckAutoDiscover(VulnerabilityCollection vulnerabilities)
        {
            using (var client = new HttpClient())
            {
                try
                {
                    DebugUtility.DebugPrint("Running autodiscover test...");
                    var response = client.GetAsync($"https://{Target}/autodiscover").Result;
                    DebugUtility.DebugPrint("Autodiscover test completed with status: " + response.StatusCode);
                }
                catch (Exception ex)
                {
                    DebugUtility.DebugPrint("Autodiscover test failed: " + ex.Message);
                }
            }
        }

        private static void CheckAutoDiscoverSSRF(VulnerabilityCollection vulnerabilities)
        {
            using (var client = new HttpClient())
            {
                try
                {
                    DebugUtility.DebugPrint("Running autodiscover SSRF test...");
                    var response = client.GetAsync($"https://{Target}/autodiscover/autodiscover.json?scanner4329@pwnstar.local/owa/&Email=autodiscover/autodiscover.json?b@small.local&Protocol=HACKER&Protocol=PowerShell").Result;
                    DebugUtility.DebugPrint("Autodiscover SSRF test completed with status: " + response.StatusCode);
                    if (response.IsSuccessStatusCode && response.Content.ReadAsStringAsync().Result.Contains("Powershell"))
                    {
                        DebugUtility.DebugPrint("Potentially vulnerable to CVE-2022-40140 & CVE-2022-41082");
                        vulnerabilities.SetAsVulnerable(Id);
                    }
                }
                catch (Exception ex)
                {
                    DebugUtility.DebugPrint("Autodiscover SSRF test failed: " + ex.Message);
                }
            }
        }
    }
}